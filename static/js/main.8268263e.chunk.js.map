{"version":3,"sources":["components/Accordian/index.ts","components/Accordian/Accordian.tsx","components/AboutAccordian/index.ts","components/AboutAccordian/AboutAccordian.tsx","components/Breadcrumb/index.ts","components/Breadcrumb/Breadcrumb.tsx","components/Pagination/index.ts","components/Pagination/Pagination.tsx","components/Button/index.ts","components/Button/Button.tsx","components/ReviewButton/index.ts","components/ReviewButton/ReviewButton.tsx","components/PrivacyButton/index.ts","components/PrivacyButton/PrivacyButton.tsx","components/Link/index.ts","components/Link/Link.tsx","components/Tag/index.ts","components/Tag/Tag.tsx","components/Select/index.ts","components/Select/Select.tsx","components/Editor/Editor.tsx","components/Editor/index.ts","components/PatternLibrary.tsx","App.tsx","serviceWorker.js","index.js","assets/icons/account-created.svg","assets/icons/account-light.svg","assets/icons/community.svg","assets/icons/contribute.svg","assets/icons/my-experiences.svg","assets/icons/no-results.svg","assets/icons/page-404.svg","assets/icons/page-404-large.svg","assets/icons/pencil.svg","assets/icons/pencil-large.svg","assets/icons/public.svg","assets/icons/question-circle-light.svg","assets/icons/question-circle.svg","assets/icons/resubmitted.svg","assets/icons/security.svg","assets/icons/submitted.svg","assets/icons/try-later-large.svg","assets/icons/try-later.svg","assets/icons/writing-guidance.svg"],"names":["Accordian","children","title","green","subtitle","useState","open","toggleAccordian","className","cx","onClick","aria-expanded","aria-controls","id","icon","aria-labelledby","AboutAccordian","text","Breadcrumb","crumbs","map","crumb","i","key","url","href","length","PaginationControl","currentPage","totalItems","itemsPerPage","useEffect","input","document","getElementsByTagName","paginationCount","createElement","textContent","replaceWith","simple","defaultCurrent","current","total","pageSize","locale","localeInfo","prevIcon","nextIcon","Button","type","disabled","twoCol","small","filter","ReviewButton","PrivacyButton","toggleMenu","privacy","changePrivacy","role","onKeyDown","e","tabIndex","Link","size","grey","Tag","search","story","Select","options","onChange","placeholder","defaultValue","value","hidden","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","style","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","Editor","RichTextEditor","createEmptyValue","editValue","toolbarClassName","editorClassName","PatternLibrary","src","AccountCreated","wrapper","AccountLight","MyExperiences","NoResults","Page404","Page404Large","PencilLarge","Public","Resubmitted","Submitted","TryAgainLarge","WritingGuidance","TryAgain","Security","Community","Contribute","Pencil","QuestionCircleLight","QuestionCircle","console","log","library","add","fas","App","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"uYAEeA,G,MCWoC,SAAC,GAK7C,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SACI,EAC4BC,oBAAS,GADrC,mBACGC,EADH,KACSC,EADT,KAGJ,OACE,yBAAKC,UAAU,wBACb,4BACEA,UAAWC,IACT,2FACA,CACE,2BAA4BN,IAGhCO,QAAS,kBAAMH,GAAiBD,IAChCK,gBAAeL,EACfM,gBAAc,oBACdC,GAAG,oBAEH,yBAAKL,UAAU,8HACb,uBAAGA,UAAU,oBAAoBN,GAChCE,GAAY,uBAAGI,UAAU,uBAAuBJ,IAEnD,kBAAC,IAAD,CACEU,KAAK,eACLN,UAAWC,IAAG,kBAAmB,CAC/B,wBAAyBH,EACzB,yBAA0BH,OAI/BG,GACC,yBACEE,UAAU,qBACVK,GAAG,oBACHE,kBAAgB,oBAEfd,MCnDIe,G,MCQmC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAC9BZ,oBAAS,GADqB,mBACvDC,EADuD,KACjDC,EADiD,KAG9D,OACE,yBAAKC,UAAU,mBACZF,GACC,yBACEE,UAAU,2BACVK,GAAG,oBACHE,kBAAgB,oBAEfE,GAGL,4BACET,UAAWC,IACT,8FACA,CACE,gCAAiCH,IAGrCI,QAAS,kBAAMH,GAAiBD,IAChCK,gBAAeL,EACfM,gBAAc,oBACdC,GAAG,oBAEH,2BAAIP,EAAO,OAAS,iBACpB,kBAAC,IAAD,CACEQ,KAAK,eACLN,UAAWC,IAAG,wBAAyB,CACrC,8BAA+BH,UCtC5BY,G,MCW+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC5C,yBAAKX,UAAU,6CACb,wBAAIA,UAAU,iFACXW,EAAOC,KAAI,SAACC,EAAeC,GAAhB,OACV,yBAAKC,IAAKF,EAAMJ,KAAMT,UAAU,qBAC7Ba,EAAMG,IACL,uBAAGC,KAAMJ,EAAMG,KACb,4BAAKH,EAAMJ,OAGb,wBAAIT,UAAU,6BAA6Ba,EAAMJ,MAElDK,IAAMH,EAAOO,OAAS,GACrB,uBAAGlB,UAAU,oBAAb,kB,kCCxBGmB,G,OCasC,SAAC,GAI/C,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAaA,OAXAC,qBAAU,WAER,IAAMC,EAAQC,SAASC,qBAAqB,SAEtCC,EAAkBF,SAASG,cAAc,OAC/CD,EAAgBE,YAAhB,UAAiCT,GACjCO,EAAgB3B,UAAY,6BAE5BwB,EAAM,GAAGM,YAAYH,KACpB,CAACP,IAMF,kBAAC,IAAD,CACEW,QAAM,EACN/B,UAAU,aACVgC,eAAgB,EAChBC,QAASb,EACTc,MAAOb,EACPc,SAAUb,EACVc,OAAQC,IACRC,SACkB,IAAhBlB,GACE,yBAAKpB,UAAU,qBACb,kBAAC,IAAD,CACEM,KAAK,eACLN,UAAU,iCACT,IACH,4CAINuC,SACE,yBAAKvC,UAAU,qBACb,2CACA,kBAAC,IAAD,CACEM,KAAK,gBACLN,UAAU,uCCzDPwC,G,OCa2B,SAAC,GAAD,IACxC/B,EADwC,EACxCA,KADwC,IAExCgC,YAFwC,MAEjC,SAFiC,EAGxCC,EAHwC,EAGxCA,SACAxC,EAJwC,EAIxCA,QACAyC,EALwC,EAKxCA,OACAC,EANwC,EAMxCA,MACAC,EAPwC,EAOxCA,OAPwC,OASxC,4BACEH,SAAUA,EACVD,KAAMA,EACNvC,QAASA,EACTF,UAAWC,IAAG,SAAU,CACtB,kBAAmB0C,EACnB,gBAAiBC,EACjB,iBAAkBC,KAGnBpC,KChCUqC,G,OCQiC,SAAC,GAAD,IAAGrC,EAAH,EAAGA,KAAMgC,EAAT,EAASA,KAAMvC,EAAf,EAAeA,QAAf,OAC9C,4BAAQF,UAAU,gBAAgByC,KAAMA,EAAMvC,QAASA,GACpDO,KCVUsC,G,OCQkC,SAAC,GAAc,IAAZtC,EAAW,EAAXA,KAAW,EAClCZ,oBAAS,GADyB,mBACtDC,EADsD,KAChDkD,EADgD,OAE5BnD,oBAAS,GAFmB,mBAEtDoD,EAFsD,KAE7CC,EAF6C,KAQ7D,OAJA3B,qBAAU,WACY2B,EAAX,WAATzC,KACC,CAACA,IAGF,6BACE,4BACEP,QAAS,kBAAM8C,GAAYlD,IAC3BE,UAAWC,IAAG,iBAAkB,CAC9B,uBAAwBH,KAG1B,0BAAME,UAAWC,IAAG,CAAE,8BAA+BH,KAClDmD,EAAU,UAAY,SACvB,kBAAC,IAAD,CACEjD,UAAU,uBACVM,KAAK,kBAGRR,GACC,yBAAKE,UAAU,4BACb,0BACEmD,KAAK,SACLjD,QAAS,kBAAMgD,GAAeD,IAC9BG,UAAW,SAAAC,GAAC,MACA,UAAVA,EAAEtC,IAAkBmC,GAAeD,GAAW,MAEhDK,SAAU,GAETL,EAAU,SAAW,gBCzCrBM,G,OCUyB,SAAC,GAAD,IAAG9C,EAAH,EAAGA,KAAMQ,EAAT,EAASA,KAAMuC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,KAArB,OACtC,uBACExC,KAAMA,EACNjB,UAAWC,IAAG,cAAD,OAAeuD,GAAQ,CAClC,aAAcC,KAGfhD,KCjBUiD,G,OCUwB,SAAC,GAAD,IAAGjD,EAAH,EAAGA,KAAMkD,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,MAAjB,OACrC,yBACE5D,UAAWC,IAAG,MAAO,CACnB,cAAe0D,EACf,aAAcC,KAGhB,8BACGnD,EACAkD,GAAU,kBAAC,IAAD,CAAiBrD,KAAK,QAAQN,UAAU,oBCnB1C6D,G,OCgB2B,SAAC,GAAD,IACxCC,EADwC,EACxCA,QACAC,EAFwC,EAExCA,SAEAC,GAJwC,EAGxChE,UAHwC,EAIxCgE,aACA3D,EALwC,EAKxCA,GACAqC,EANwC,EAMxCA,SANwC,OAQxC,yBAAK1C,UAAU,mBACb,4BACE+D,SAAUA,EACV1D,GAAIA,EACJ4D,aAAcD,EACdtB,SAAUA,GAEV,4BAAQwB,MAAOF,EAAatB,UAAU,EAAMyB,QAAQ,GACjDH,GAEFF,EAAQlD,KAAI,gBAAGsD,EAAH,EAAGA,MAAOzD,EAAV,EAAUA,KAAV,OACX,4BAAQM,IAAKmD,EAAOA,MAAOA,GACxBzD,U,iBC/BL2D,G,OAAgB,CAEpBC,QAAS,CACP,uBACA,qBACA,uBAEFC,qBAAsB,CACpB,CAAEC,MAAO,OAAQC,MAAO,OAAQxE,UAAW,kBAC3C,CAAEuE,MAAO,SAAUC,MAAO,SAAUxE,UAAW,mBAEjDyE,oBAAqB,CACnB,CAAEF,MAAO,SAAUC,MAAO,YAC1B,CAAED,MAAO,UAAWC,MAAO,eAE7BE,mBAAoB,CAClB,CAAEH,MAAO,KAAMC,MAAO,sBAAuBxE,UAAW,qBCrB7C2E,EDyB2B,WAAO,IAAD,EACnB9E,mBAAS+E,IAAeC,oBADL,mBACvCX,EADuC,KAChCY,EADgC,KAG9C,OACE,kBAAC,IAAD,CACEZ,MAAOA,EACPH,SAAU,SAAAtD,GAAI,OAAIqE,EAAUrE,IAE5B2D,cAAeA,EACfW,iBAAiB,kBACjBC,gBAAgB,qB,yVEgLPC,GAjLQ,kBACrB,yBAAKjF,UAAU,6CACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,WACA,uBAAGA,UAAU,eAAb,cAEA,wBAAIA,UAAU,cAAd,WACA,uBAAGA,UAAU,eAAb,aAEA,wBAAIA,UAAU,cAAd,kCACA,uBAAGA,UAAU,eAAb,aAEA,wBAAIA,UAAU,cAAd,cACA,uBAAGA,UAAU,eAAb,aAEA,wBAAIA,UAAU,cAAd,eACA,uBAAGA,UAAU,eAAb,aAEA,wBAAIA,UAAU,eAAd,oBACA,uBAAGA,UAAU,eAAb,cAEA,uBAAGA,UAAU,WAAb,kIAIA,uBAAGA,UAAU,eAAb,UAEA,uBAAGA,UAAU,WAAb,2BACA,uBAAGA,UAAU,eAAb,UAEA,uBAAGA,UAAU,eAAb,sBACA,uBAAGA,UAAU,eAAb,gBAEA,uBAAGA,UAAU,WAAb,6CACA,uBAAGA,UAAU,eAAb,UAEA,uBAAGA,UAAU,eAAb,kFAIA,uBAAGA,UAAU,eAAb,gBAEA,uBAAGA,UAAU,YAAb,kFAIA,uBAAGA,UAAU,eAAb,WAEA,uBAAGA,UAAU,SAAb,+FAIA,uBAAGA,UAAU,eAAb,UAGF,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CAAUkF,IAAKC,IAAgBnF,UAAU,MAAMoF,QAAQ,SACvD,kBAAC,IAAD,CAAUF,IAAKG,IAAcrF,UAAU,MAAMoF,QAAQ,SACrD,kBAAC,IAAD,CAAUF,IAAKI,IAAetF,UAAU,MAAMoF,QAAQ,SACtD,kBAAC,IAAD,CAAUF,IAAKK,IAAWvF,UAAU,MAAMoF,QAAQ,SAClD,kBAAC,IAAD,CAAUF,IAAKM,IAASxF,UAAU,MAAMoF,QAAQ,SAChD,kBAAC,IAAD,CAAUF,IAAKO,IAAczF,UAAU,MAAMoF,QAAQ,SACrD,kBAAC,IAAD,CAAUF,IAAKQ,IAAa1F,UAAU,MAAMoF,QAAQ,SACpD,kBAAC,IAAD,CAAUF,IAAKS,IAAQ3F,UAAU,MAAMoF,QAAQ,SAC/C,kBAAC,IAAD,CAAUF,IAAKU,KAAa5F,UAAU,MAAMoF,QAAQ,SACpD,kBAAC,IAAD,CAAUF,IAAKW,KAAW7F,UAAU,MAAMoF,QAAQ,SAClD,kBAAC,IAAD,CAAUF,IAAKY,KAAe9F,UAAU,MAAMoF,QAAQ,SACtD,kBAAC,IAAD,CAAUF,IAAKa,KAAiB/F,UAAU,MAAMoF,QAAQ,SAExD,kBAAC,IAAD,CAAUF,IAAKc,KAAUhG,UAAU,MAAMoF,QAAQ,SACjD,kBAAC,IAAD,CAAUF,IAAKe,KAAUjG,UAAU,MAAMoF,QAAQ,SACjD,kBAAC,IAAD,CAAUF,IAAKgB,IAAWlG,UAAU,MAAMoF,QAAQ,SAClD,kBAAC,IAAD,CAAUF,IAAKiB,IAAYnG,UAAU,MAAMoF,QAAQ,SACnD,kBAAC,IAAD,CAAUF,IAAKkB,IAAQpG,UAAU,MAAMoF,QAAQ,SAC/C,kBAAC,IAAD,CAAUF,IAAKmB,KAAqBrG,UAAU,MAAMoF,QAAQ,SAC5D,kBAAC,IAAD,CAAUF,IAAKoB,KAAgBtG,UAAU,MAAMoF,QAAQ,UAGzD,yBAAKpF,UAAU,wBACb,kBAAC,EAAD,CACEN,MAAM,cACNC,OAAO,EACPC,SAAS,0BAET,kDAGJ,yBAAKI,UAAU,wBACb,kBAAC,EAAD,CAAWN,MAAM,eACf,kDAIJ,yBAAKM,UAAU,wBACb,kBAAC,EAAD,CAAgBS,KAAK,4JAEvB,yBAAKT,UAAU,wBACb,kBAAC,EAAD,CACEW,OAAQ,CACN,CAAEF,KAAM,OAAQO,IAAK,KACrB,CAAEP,KAAM,cAAeO,IAAK,KAC5B,CAAEP,KAAM,sBAAuBO,IAAK,QAI1C,yBAAKhB,UAAU,wBACb,kBAAC,EAAD,CAAmBqB,WAAY,GAAIC,aAAc,EAAGF,YAAa,KAGnE,yBAAKpB,UAAU,wBACb,kBAAC,EAAD,CAAQS,KAAK,qBAAqBP,QAAS,kBAAMqG,QAAQC,IAAI,cAE/D,yBAAKxG,UAAU,wBACb,kBAAC,EAAD,CACES,KAAK,qBACLP,QAAS,kBAAMqG,QAAQC,IAAI,WAC3B9D,UAAU,IAEZ,yBAAK1C,UAAU,wBACb,kBAAC,EAAD,CACE2C,QAAQ,EACRlC,KAAK,oBACLP,QAAS,kBAAMqG,QAAQC,IAAI,cAG/B,yBAAKxG,UAAU,wBACb,kBAAC,EAAD,CACES,KAAK,YACLmC,OAAO,EACP1C,QAAS,kBAAMqG,QAAQC,IAAI,cAG/B,yBAAKxG,UAAU,wBACb,kBAAC,EAAD,CACES,KAAK,YACLoC,QAAQ,EACR3C,QAAS,kBAAMqG,QAAQC,IAAI,eAIjC,yBAAKxG,UAAU,wBACb,kBAAC,EAAD,CAAcS,KAAK,YAAYP,QAAS,kBAAMqG,QAAQC,IAAI,cAE5D,yBAAKxG,UAAU,wBACb,kBAAC,EAAD,CAAeS,KAAK,aAEtB,yBAAKT,UAAU,wBACb,kBAAC,EAAD,CAAMiB,KAAK,IAAIR,KAAK,uBAAuB+C,KAAK,UAChD,kBAAC,EAAD,CAAMvC,KAAK,IAAIR,KAAK,uBAAuB+C,KAAK,WAChD,kBAAC,EAAD,CAAMvC,KAAK,IAAIR,KAAK,0BAA0B+C,KAAK,UACnD,kBAAC,EAAD,CAAMvC,KAAK,IAAIR,KAAK,iBAAiB+C,KAAK,QAAQC,MAAM,KAE1D,yBAAKzD,UAAU,wBACb,kBAAC,EAAD,CAAKS,KAAK,aAEZ,yBAAKT,UAAU,wBACb,kBAAC,EAAD,CAAKS,KAAK,YAAYkD,QAAQ,KAEhC,yBAAK3D,UAAU,wBACb,kBAAC,EAAD,CAAKS,KAAK,OAAOmD,OAAO,KAE1B,yBAAK5D,UAAU,wBACb,kBAAC,EAAD,CACE8D,QAAS,CACP,CAAEI,MAAO,IAAKzD,KAAM,aACpB,CAAEyD,MAAO,IAAKzD,KAAM,cAEtBuD,YAAY,UACZ3D,GAAG,aAGP,yBAAKL,UAAU,wBACb,kBAAC,EAAD,SCzMNyG,IAAQC,IAAIC,KAEZ,IAQeC,GARgB,kBAC7B,yBAAK5G,UAAU,kBACb,yBAAKA,UAAU,eAAewE,MAAO,CAAEqC,UAAW,SAChD,kBAAC,GAAD,SCAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,GAAD,MAAS3F,SAAS4F,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mD,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,8C","file":"static/js/main.8268263e.chunk.js","sourcesContent":["import Accordian from \"./Accordian\";\n\nexport default Accordian;\n","import React, { useState, FunctionComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport cx from \"classnames\";\n\nimport \"./Accordian.scss\";\n\ninterface IProps {\n  children: JSX.Element | JSX.Element[];\n  title: string;\n  subtitle?: string;\n  green?: boolean;\n}\n\nconst Accordian: React.FunctionComponent<IProps> = ({\n  children,\n  title,\n  green,\n  subtitle\n}) => {\n  const [open, toggleAccordian] = useState(false);\n\n  return (\n    <div className=\"accordian--container\">\n      <button\n        className={cx(\n          \"flex-container flex-container--no-padding flex-container--align-center accordian--header\",\n          {\n            \"accordian--header--green\": green\n          }\n        )}\n        onClick={() => toggleAccordian(!open)}\n        aria-expanded={open}\n        aria-controls=\"accordian-content\"\n        id=\"accordian-header\"\n      >\n        <div className=\"accordian--title-container flex-container flex-container--no-padding flex-container--no-space flex-container--align-center\">\n          <p className=\"accordian--title\">{title}</p>\n          {subtitle && <p className=\"accordian--subtitle\">{subtitle}</p>}\n        </div>\n        <FontAwesomeIcon\n          icon=\"chevron-down\"\n          className={cx(\"accordian--icon\", {\n            \"accordian--icon--open\": open,\n            \"accordian--icon--green\": green\n          })}\n        />\n      </button>\n      {open && (\n        <div\n          className=\"accordian--content\"\n          id=\"accordian-content\"\n          aria-labelledby=\"accordian-header\"\n        >\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Accordian;\n","import AboutAccordian from \"./AboutAccordian\";\n\nexport default AboutAccordian;\n","import React, { FunctionComponent, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport cx from \"classnames\";\n\nimport \"./AboutAccordian.scss\";\n\ninterface IProps {\n  text: string;\n}\n\nconst AboutAccordian: FunctionComponent<IProps> = ({ text }) => {\n  const [open, toggleAccordian] = useState(false);\n\n  return (\n    <div className=\"about-accordian\">\n      {open && (\n        <div\n          className=\"about-accordian--content\"\n          id=\"accordian-content\"\n          aria-labelledby=\"accordian-header\"\n        >\n          {text}\n        </div>\n      )}\n      <button\n        className={cx(\n          \"flex-container flex-container--align-center flex-container--justify about-accordian--button\",\n          {\n            \"about-accordian--button--open\": open\n          }\n        )}\n        onClick={() => toggleAccordian(!open)}\n        aria-expanded={open}\n        aria-controls=\"accordian-content\"\n        id=\"accordian-header\"\n      >\n        <p>{open ? \"Hide\" : \"Read about us\"}</p>\n        <FontAwesomeIcon\n          icon=\"chevron-down\"\n          className={cx(\"about-accordian--icon\", {\n            \"about-accordian--icon--open\": open\n          })}\n        />\n      </button>\n    </div>\n  );\n};\n\nexport default AboutAccordian;\n","import Breadcrumb from './Breadcrumb'\n\nexport default Breadcrumb","import React, { FunctionComponent } from \"react\";\n\nimport \"./Breadcrumb.scss\";\n\ninterface ICrumb {\n  text: string;\n  url: string;\n}\n\ninterface IProps {\n  crumbs: ICrumb[];\n}\n\nconst Breadcrumb: FunctionComponent<IProps> = ({ crumbs }) => (\n  <div className=\"flex-container flex-container--no-padding\">\n    <ul className=\"breadcrumb flex-container flex-container--no-padding flex-container--no-space\">\n      {crumbs.map((crumb: ICrumb, i: number) => (\n        <div key={crumb.text} className=\"breadcrumb--crumb\">\n          {crumb.url ? (\n            <a href={crumb.url}>\n              <li>{crumb.text}</li>\n            </a>\n          ) : (\n            <li className=\"breadcrumb--crumb--active\">{crumb.text}</li>\n          )}\n          {i !== crumbs.length - 1 && (\n            <p className=\"breadcrumb--icon\">&#8250;</p>\n          )}\n        </div>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Breadcrumb;\n","import PaginationControl from \"./Pagination\";\n\nexport default PaginationControl;\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Pagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\n// @ts-ignore\nimport localeInfo from \"rc-pagination/lib/locale/en_GB\";\n\nimport \"./Pagination.scss\";\n\ninterface IProps {\n  totalItems: number;\n  itemsPerPage: number;\n  currentPage: number;\n}\n\nconst PaginationControl: FunctionComponent<IProps> = ({\n  currentPage,\n  totalItems,\n  itemsPerPage\n}) => {\n  useEffect(() => {\n    // this package has an input for the current page with no way to override it, remove this on load and replace with a div for styling\n    const input = document.getElementsByTagName(\"input\");\n\n    const paginationCount = document.createElement(\"div\");\n    paginationCount.textContent = `${currentPage}`;\n    paginationCount.className = \"pagination--label--current\";\n\n    input[0].replaceWith(paginationCount);\n  }, [currentPage]);\n\n  return (\n    // the package does not recognise simple as a prop type so have to ts-ignore\n\n    // @ts-ignore\n    <Pagination\n      simple\n      className=\"pagination\"\n      defaultCurrent={1}\n      current={currentPage}\n      total={totalItems}\n      pageSize={itemsPerPage}\n      locale={localeInfo}\n      prevIcon={\n        currentPage !== 1 && (\n          <div className=\"pagination--label\">\n            <FontAwesomeIcon\n              icon=\"chevron-left\"\n              className=\"pagination--label--icon-left\"\n            />{\" \"}\n            <span>Last page</span>\n          </div>\n        )\n      }\n      nextIcon={\n        <div className=\"pagination--label\">\n          <span>Next page</span>\n          <FontAwesomeIcon\n            icon=\"chevron-right\"\n            className=\"pagination--label--icon-right\"\n          />\n        </div>\n      }\n    />\n  );\n};\n\nexport default PaginationControl;\n","import Button from './Button'\n\nexport default Button","import React, { FunctionComponent } from \"react\";\nimport cx from \"classnames\";\n\nimport \"./Button.scss\";\n\ninterface IProps {\n  text: string;\n  type?: \"submit\" | \"reset\" | \"button\";\n  disabled?: boolean;\n  onClick: () => void;\n  twoCol?: boolean;\n  small?: boolean;\n  filter?: boolean;\n}\n\nconst Button: FunctionComponent<IProps> = ({\n  text,\n  type = \"button\",\n  disabled,\n  onClick,\n  twoCol,\n  small,\n  filter\n}) => (\n  <button\n    disabled={disabled}\n    type={type}\n    onClick={onClick}\n    className={cx(\"button\", {\n      \"button--two-col\": twoCol,\n      \"button--small\": small,\n      \"button--filter\": filter\n    })}\n  >\n    {text}\n  </button>\n);\n\nexport default Button;\n","import ReviewButton from \"./ReviewButton\";\n\nexport default ReviewButton;\n","import React, { FunctionComponent } from \"react\";\n\nimport \"./ReviewButton.scss\";\n\ninterface IProps {\n  text: string;\n  type?: \"submit\" | \"reset\" | \"button\";\n  onClick: () => void;\n}\n\nconst ReviewButton: FunctionComponent<IProps> = ({ text, type, onClick }) => (\n  <button className=\"review-button\" type={type} onClick={onClick}>\n    {text}\n  </button>\n);\n\nexport default ReviewButton;\n","import PrivacyButton from \"./PrivacyButton\";\n\nexport default PrivacyButton;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\n\nimport \"./PrivacyButton.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport cx from \"classnames\";\n\ninterface IProps {\n  text: string;\n}\n\nconst PrivacyButton: FunctionComponent<IProps> = ({ text }) => {\n  const [open, toggleMenu] = useState(false);\n  const [privacy, changePrivacy] = useState(false);\n\n  useEffect(() => {\n    text === \"public\" ? changePrivacy(false) : changePrivacy(true);\n  }, [text]);\n\n  return (\n    <div>\n      <button\n        onClick={() => toggleMenu(!open)}\n        className={cx(\"privacy-button\", {\n          \"privacy-button--open\": open\n        })}\n      >\n        <span className={cx({ \"privacy-button--open--title\": open })}>\n          {privacy ? \"private\" : \"public\"}\n          <FontAwesomeIcon\n            className=\"privacy-button--icon\"\n            icon=\"chevron-down\"\n          />\n        </span>\n        {open && (\n          <div className=\"privacy-button--dropdown\">\n            <span\n              role=\"button\"\n              onClick={() => changePrivacy(!privacy)}\n              onKeyDown={e =>\n                e.key === \"Enter\" ? changePrivacy(!privacy) : null\n              }\n              tabIndex={0}\n            >\n              {privacy ? \"public\" : \"private\"}\n            </span>\n          </div>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default PrivacyButton;\n","import Link from './Link'\n\nexport default Link","import React, { FunctionComponent } from \"react\";\nimport cx from \"classnames\";\n\nimport \"./Link.scss\";\n\ninterface IProps {\n  text: string;\n  href: string;\n  size: \"small\" | \"medium\" | \"large\";\n  grey?: boolean;\n}\n\nconst Link: FunctionComponent<IProps> = ({ text, href, size, grey }) => (\n  <a\n    href={href}\n    className={cx(`link link--${size}`, {\n      \"link--grey\": grey\n    })}\n  >\n    {text}\n  </a>\n);\n\nexport default Link;\n","import Tag from './Tag'\n\nexport default Tag","import React, { FunctionComponent } from \"react\";\nimport cx from \"classnames\";\n\nimport \"./Tag.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface IProps {\n  text: string;\n  search?: boolean;\n  story?: boolean;\n}\n\nconst Tag: FunctionComponent<IProps> = ({ text, search, story }) => (\n  <div\n    className={cx(\"tag\", {\n      \"tag--search\": search,\n      \"tag--story\": story\n    })}\n  >\n    <span>\n      {text}\n      {search && <FontAwesomeIcon icon=\"times\" className=\"tag--remove\" />}\n    </span>\n  </div>\n);\n\nexport default Tag;\n","import Select from './Select'\n\nexport default Select","import React, { ChangeEvent, FunctionComponent } from \"react\";\n\nimport \"./Select.scss\";\n\ninterface IOption {\n  value: string;\n  text: string;\n}\n\ninterface IProps {\n  options: IOption[];\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  className?: string;\n  placeholder: string;\n  id: string;\n  disabled?: boolean;\n}\n\nconst Select: FunctionComponent<IProps> = ({\n  options,\n  onChange,\n  className,\n  placeholder,\n  id,\n  disabled\n}) => (\n  <div className=\"select--wrapper\">\n    <select\n      onChange={onChange}\n      id={id}\n      defaultValue={placeholder}\n      disabled={disabled}\n    >\n      <option value={placeholder} disabled={true} hidden={true}>\n        {placeholder}\n      </option>\n      {options.map(({ value, text }) => (\n        <option key={value} value={value}>\n          {text}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nexport default Select;\n","import React, { FunctionComponent, useState } from \"react\";\nimport RichTextEditor from \"react-rte\";\n\nimport \"./Editor.scss\";\n\ninterface IProps {}\n\nconst toolbarConfig = {\n  // Optionally specify the groups to display (displayed in the order listed).\n  display: [\n    \"INLINE_STYLE_BUTTONS\",\n    \"BLOCK_TYPE_BUTTONS\",\n    \"BLOCK_TYPE_DROPDOWN\"\n  ],\n  INLINE_STYLE_BUTTONS: [\n    { label: \"Bold\", style: \"BOLD\", className: \"editor--button\" },\n    { label: \"Italic\", style: \"ITALIC\", className: \"editor--button\" }\n  ],\n  BLOCK_TYPE_DROPDOWN: [\n    { label: \"Normal\", style: \"unstyled\" },\n    { label: \"Heading\", style: \"header-one\" }\n  ],\n  BLOCK_TYPE_BUTTONS: [\n    { label: \"UL\", style: \"unordered-list-item\", className: \"editor--button\" }\n  ]\n};\n\nconst Editor: FunctionComponent<IProps> = () => {\n  const [value, editValue] = useState(RichTextEditor.createEmptyValue());\n\n  return (\n    <RichTextEditor\n      value={value}\n      onChange={text => editValue(text)}\n      // @ts-ignore\n      toolbarConfig={toolbarConfig}\n      toolbarClassName=\"editor--toolbar\"\n      editorClassName=\"editor--content\"\n    />\n  );\n};\nexport default Editor;\n","import Editor from './Editor'\n\nexport default Editor","import React from \"react\";\nimport ReactSVG from \"react-svg\";\n\nimport \"./PatternLibrary.scss\";\nimport Accordian from \"./Accordian\";\nimport AboutAccordian from \"./AboutAccordian\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport PaginationControl from \"./Pagination\";\nimport Button from \"./Button\";\nimport ReviewButton from \"./ReviewButton\";\nimport PrivacyButton from \"./PrivacyButton\";\nimport Link from \"./Link\";\nimport Tag from \"./Tag\";\nimport Select from \"./Select\";\nimport Editor from \"./Editor\";\n\nimport AccountCreated from \"../assets/icons/account-created.svg\";\nimport AccountLight from \"../assets/icons/account-light.svg\";\nimport Community from \"../assets/icons/community.svg\";\nimport Contribute from \"../assets/icons/contribute.svg\";\nimport MyExperiences from \"../assets/icons/my-experiences.svg\";\nimport NoResults from \"../assets/icons/no-results.svg\";\nimport Page404 from \"../assets/icons/page-404.svg\";\nimport Page404Large from \"../assets/icons/page-404-large.svg\";\nimport Pencil from \"../assets/icons/pencil.svg\";\nimport PencilLarge from \"../assets/icons/pencil-large.svg\";\nimport Public from \"../assets/icons/public.svg\";\nimport QuestionCircleLight from \"../assets/icons/question-circle-light.svg\";\nimport QuestionCircle from \"../assets/icons/question-circle.svg\";\nimport Resubmitted from \"../assets/icons/resubmitted.svg\";\nimport Security from \"../assets/icons/security.svg\";\nimport Submitted from \"../assets/icons/submitted.svg\";\nimport TryAgainLarge from \"../assets/icons/try-later-large.svg\";\nimport TryAgain from \"../assets/icons/try-later.svg\";\nimport WritingGuidance from \"../assets/icons/writing-guidance.svg\";\n\nconst PatternLibrary = () => (\n  <div className=\"flex-container flex-container--no-padding\">\n    <div className=\"flex-col--12\">\n      <h1 className=\"heading--xl\">Welcome</h1>\n      <p className=\"description\">XL Heading</p>\n\n      <h1 className=\"title--alt\">Welcome</h1>\n      <p className=\"description\">Alt title</p>\n\n      <h2 className=\"heading--l\">Read other peoples experiences</h2>\n      <p className=\"description\">L Heading</p>\n\n      <h3 className=\"heading--m\">Contact us</h3>\n      <p className=\"description\">M Heading</p>\n\n      <h4 className=\"heading--s\">Email us at</h4>\n      <p className=\"description\">S Heading</p>\n\n      <h5 className=\"heading--xs\">Read whole story</h5>\n      <p className=\"description\">XS Heading</p>\n\n      <p className=\"body--l\">\n        Collecting first-person accounts of voices, from people who hear voices.\n        This is a place where you can explore and share…\n      </p>\n      <p className=\"description\">L Body</p>\n\n      <p className=\"body--m\">info@hearing-voices.org</p>\n      <p className=\"description\">M Body</p>\n\n      <p className=\"body--m-alt\">About this project</p>\n      <p className=\"description\">M Body (Alt)</p>\n\n      <p className=\"body--s\">Created by Hearing Voices Network England</p>\n      <p className=\"description\">S Body</p>\n\n      <p className=\"body--s-alt\">\n        Signing up is secure and how much you share is up to you, you can\n        always…\n      </p>\n      <p className=\"description\">S Body (Alt)</p>\n\n      <p className=\"body--xs\">\n        Signing up is secure and how much you share is up to you, you can\n        always…\n      </p>\n      <p className=\"description\">XS Body</p>\n\n      <p className=\"story\">\n        I was terrorized by three male voices who talked about me, narrating my\n        movements and…\n      </p>\n      <p className=\"description\">Story</p>\n    </div>\n\n    <div className=\"section flex-col--12\">\n      <ReactSVG src={AccountCreated} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={AccountLight} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={MyExperiences} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={NoResults} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={Page404} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={Page404Large} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={PencilLarge} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={Public} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={Resubmitted} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={Submitted} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={TryAgainLarge} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={WritingGuidance} className=\"svg\" wrapper=\"span\" />\n\n      <ReactSVG src={TryAgain} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={Security} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={Community} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={Contribute} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={Pencil} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={QuestionCircleLight} className=\"svg\" wrapper=\"span\" />\n      <ReactSVG src={QuestionCircle} className=\"svg\" wrapper=\"span\" />\n    </div>\n\n    <div className=\"section flex-col--12\">\n      <Accordian\n        title=\"11 Jan 2019\"\n        green={true}\n        subtitle=\"1 private, 1 in public\"\n      >\n        <p>Accordian content</p>\n      </Accordian>\n    </div>\n    <div className=\"section flex-col--12\">\n      <Accordian title=\"28 Dec 2018\">\n        <p>Accordian content</p>\n      </Accordian>\n    </div>\n\n    <div className=\"section flex-col--12\">\n      <AboutAccordian text=\"Collecting first-person accounts of voices, from people who hear voices. This is a place where you can explore and share your experiences anonymously.\"></AboutAccordian>\n    </div>\n    <div className=\"section flex-col--12\">\n      <Breadcrumb\n        crumbs={[\n          { text: \"Home\", url: \"/\" },\n          { text: \"Experiences\", url: \"/\" },\n          { text: \"Selected Experience\", url: \"\" }\n        ]}\n      />\n    </div>\n    <div className=\"section flex-col--12\">\n      <PaginationControl totalItems={20} itemsPerPage={5} currentPage={1} />\n    </div>\n\n    <div className=\"section flex-col--12\">\n      <Button text=\"Browse experiences\" onClick={() => console.log(\"Click!\")} />\n    </div>\n    <div className=\"section flex-col--12\">\n      <Button\n        text=\"Browse experiences\"\n        onClick={() => console.log(\"Click!\")}\n        disabled={true}\n      />\n      <div className=\"section flex-col--12\">\n        <Button\n          twoCol={true}\n          text=\"Sign up and share\"\n          onClick={() => console.log(\"Click!\")}\n        />\n      </div>\n      <div className=\"section flex-col--12\">\n        <Button\n          text=\"New story\"\n          small={true}\n          onClick={() => console.log(\"Click!\")}\n        />\n      </div>\n      <div className=\"section flex-col--12\">\n        <Button\n          text=\"Filter by\"\n          filter={true}\n          onClick={() => console.log(\"Click!\")}\n        />\n      </div>\n    </div>\n    <div className=\"section flex-col--12\">\n      <ReviewButton text=\"in review\" onClick={() => console.log(\"Click!\")} />\n    </div>\n    <div className=\"section flex-col--12\">\n      <PrivacyButton text=\"Private\" />\n    </div>\n    <div className=\"section flex-col--12\">\n      <Link href=\"/\" text=\"View other's stories\" size=\"large\" />\n      <Link href=\"/\" text=\"View other's stories\" size=\"medium\" />\n      <Link href=\"/\" text=\"info@hearing-voices.org\" size=\"small\" />\n      <Link href=\"/\" text=\"Privacy policy\" size=\"small\" grey={true} />\n    </div>\n    <div className=\"section flex-col--12\">\n      <Tag text=\"Talking\" />\n    </div>\n    <div className=\"section flex-col--12\">\n      <Tag text=\"Can't say\" search={true} />\n    </div>\n    <div className=\"section flex-col--12\">\n      <Tag text=\"Male\" story={true} />\n    </div>\n    <div className=\"section flex-col--12\">\n      <Select\n        options={[\n          { value: \"1\", text: \"Example 1\" },\n          { value: \"2\", text: \"Example 2\" }\n        ]}\n        placeholder=\"See all\"\n        id=\"example\"\n      />\n    </div>\n    <div className=\"section flex-col--12\">\n      <Editor />\n    </div>\n  </div>\n);\n\nexport default PatternLibrary;\n","import React, { FunctionComponent } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./styles/main.scss\";\n\nimport PatternLibrary from \"./components/PatternLibrary\";\n\nlibrary.add(fas);\n\nconst App: FunctionComponent = () => (\n  <div className=\"flex-container\">\n    <div className=\"flex-col--12\" style={{ marginTop: \"20px\" }}>\n      <PatternLibrary />\n    </div>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/account-created.e5d63cf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/account-light.da49d63b.svg\";","module.exports = __webpack_public_path__ + \"static/media/community.d355da98.svg\";","module.exports = __webpack_public_path__ + \"static/media/contribute.de375067.svg\";","module.exports = __webpack_public_path__ + \"static/media/my-experiences.0a141438.svg\";","module.exports = __webpack_public_path__ + \"static/media/no-results.de860de2.svg\";","module.exports = __webpack_public_path__ + \"static/media/page-404.8f235072.svg\";","module.exports = __webpack_public_path__ + \"static/media/page-404-large.508a0f09.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil.c9bb2c61.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-large.ddf151c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/public.cb626540.svg\";","module.exports = __webpack_public_path__ + \"static/media/question-circle-light.fb4f434a.svg\";","module.exports = __webpack_public_path__ + \"static/media/question-circle.becb03f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/resubmitted.bcd762ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/security.bfaae3df.svg\";","module.exports = __webpack_public_path__ + \"static/media/submitted.57a87395.svg\";","module.exports = __webpack_public_path__ + \"static/media/try-later-large.2545c375.svg\";","module.exports = __webpack_public_path__ + \"static/media/try-later.3966a4dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/writing-guidance.2e33348d.svg\";"],"sourceRoot":""}